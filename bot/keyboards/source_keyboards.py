import json
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from typing import List, Dict

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (Reply) ---
def get_main_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="ü§ñ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥")],
            [KeyboardButton(text="üìù –ò—Å—Ç–æ—á–Ω–∏–∫–∏"), KeyboardButton(text="üì¢ –ü–∞–±–ª–∏–∫–∏")]
        ],
        resize_keyboard=True
    )

# --- –ú–µ–Ω—é –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤ (Reply) ---
def get_sources_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫"), KeyboardButton(text="–ú–æ–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏")],
            [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )

# --- –ú–µ–Ω—é –ü–∞–±–ª–∏–∫–æ–≤ (Reply) ---
def get_publics_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –ø–∞–±–ª–∏–∫"), KeyboardButton(text="–ú–æ–∏ –ø–∞–±–ª–∏–∫–∏")],
            [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )

# --- –ú–µ–Ω—é –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞ (Reply) ---
def get_autopost_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ù–∞—á–∞—Ç—å –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –≤ –ø–∞–±–ª–∏–∫–µ")],
            [KeyboardButton(text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–æ–º –≤ –ø–∞–±–ª–∏–∫–∞—Ö")],
            [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )

# --- –ú–µ–Ω—é –†–æ–ª–∏ GPT (Reply) ---
def get_gpt_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å GPT"), KeyboardButton(text="–¢–µ–∫—É—â–∞—è —Ä–æ–ª—å GPT")],
            [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )

# --- –û–±—â–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
def get_cancel_keyboard(callback_data: str = "cancel"):
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=callback_data)]])

def get_back_to_main_menu_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main_menu")]])

def get_skip_keyboard(callback_data: str):
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=callback_data)]])

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –ù–ê–°–¢–†–û–ô–ö–ò –ê–í–¢–û–ü–û–°–¢–ò–ù–ì–ê (SETUP) ---

def get_user_groups_keyboard(groups: list, prefix: str):
    buttons = []
    for group in groups:
        link = group.get('group_link', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
        # –£–±–∏—Ä–∞–µ–º https:// –∏ www –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏
        display_name = link.replace("https://", "").replace("www.", "")
        buttons.append([InlineKeyboardButton(text=display_name, callback_data=f"{prefix}{link}")])
    buttons.append([InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_autopost_mode_keyboard(prefix: str):
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π", callback_data=f"{prefix}autopost_mode_automatic")],
        [InlineKeyboardButton(text="üë§ –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã–π", callback_data=f"{prefix}autopost_mode_controlled")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]
    ])

def get_source_selection_mode_keyboard(prefix: str):
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥–±–æ—Ä", callback_data=f"{prefix}source_mode_auto")],
        [InlineKeyboardButton(text="‚úã –í—ã–±—Ä–∞—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤—Ä—É—á–Ω—É—é", callback_data=f"{prefix}source_mode_manual")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"{prefix}back_to_mode")]
    ])

def get_user_sources_keyboard(sources: list, selected_ids: list, page: int = 0, prefix: str = "", page_size: int = 5):
    buttons = []
    start = page * page_size
    end = start + page_size
    
    for src in sources[start:end]:
        selected_icon = "‚úÖ" if src['id'] in selected_ids else "‚òëÔ∏è"
        # –£–±–∏—Ä–∞–µ–º https:// –∏ www –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏
        display_name = src['link'].replace("https://", "").replace("www.", "")
        buttons.append([InlineKeyboardButton(
            text=f"{selected_icon} {display_name}", 
            callback_data=f"{prefix}select_source_{src['id']}"
        )])

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    nav_buttons = []
    if page > 0:
        nav_buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ü—Ä–µ–¥.", callback_data=f"{prefix}page_{page-1}"))
    if end < len(sources):
        nav_buttons.append(InlineKeyboardButton(text="–°–ª–µ–¥. ‚û°Ô∏è", callback_data=f"{prefix}page_{page+1}"))
    
    if nav_buttons:
        buttons.append(nav_buttons)

    # –£–ø—Ä–∞–≤–ª—è—é—â–∏–µ –∫–Ω–æ–ø–∫–∏
    control_buttons = []
    if prefix == "setup_":
        control_buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="setup_back_to_mode"))
        control_buttons.append(InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data="setup_done_selecting_sources"))
    elif prefix == "manage_":
        control_buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_group_settings"))
        control_buttons.append(InlineKeyboardButton(text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", callback_data="manage_done_selecting_sources"))

    buttons.append(control_buttons)
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_autopost_role_selection_keyboard(prefix: str):
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é —Ä–æ–ª—å", callback_data=f"{prefix}use_default_role")],
        [InlineKeyboardButton(text="‚úèÔ∏è –ó–∞–¥–∞—Ç—å –Ω–æ–≤—É—é –¥–ª—è —ç—Ç–æ–≥–æ –ø–∞–±–ª–∏–∫–∞", callback_data=f"{prefix}set_new_role")]
    ])

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ê–í–¢–û–ü–û–°–¢–ò–ù–ì–û–ú (MANAGE) ---

def get_autopost_management_keyboard(settings: list):
    buttons = []
    for setting in settings:
        link = setting.get('group_link', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
        display_name = link.replace("https://", "").replace("www.", "")
        status_icon = "üü¢" if setting.get('is_active') else "üî¥"
        buttons.append([InlineKeyboardButton(text=f"{status_icon} {display_name}", callback_data=f"manage_autopost_{link}")])
    buttons.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_autopost_menu")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_autopost_settings_keyboard(group_link: str, is_active: bool, mode: str):
    toggle_text = "üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å" if is_active else "‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å"
    toggle_action = "pause" if is_active else "resume"
    
    change_mode_text = "–°–º–µ–Ω–∏—Ç—å –Ω–∞ ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π" if mode == 'controlled' else "–°–º–µ–Ω–∏—Ç—å –Ω–∞ üë§ –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã–π"
    change_mode_action = "automatic" if mode == 'controlled' else "controlled"

    buttons = [
        [InlineKeyboardButton(text=toggle_text, callback_data=f"toggle_autopost_{toggle_action}_{group_link}")],
        [InlineKeyboardButton(text=change_mode_text, callback_data=f"change_mode_{change_mode_action}_{group_link}")],
        [InlineKeyboardButton(text="üóÇ –í—ã–±—Ä–∞—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–∏", callback_data=f"manage_sources_{group_link}")],
        [InlineKeyboardButton(text="üë§ –ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å GPT", callback_data=f"manage_role_{group_link}")],
        [InlineKeyboardButton(text="üö´ –ó–∞–ø—Ä–µ—Ç–Ω—ã–µ —Ç–µ–º—ã", callback_data=f"manage_topics_{group_link}")],
        [InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É", callback_data=f"delete_autopost_{group_link}")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data="back_to_autopost_management")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

# --- –°—Ç–∞—Ä—ã–µ –∏–ª–∏ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏–ª–∏ –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å ---

def get_themes_keyboard(selected_themes: list = None):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ–º."""
    if selected_themes is None:
        selected_themes = []
    
    from config.settings import THEMES
    buttons = []
    row = []
    for theme in THEMES:
        text = f"‚úÖ {theme}" if theme in selected_themes else theme
        row.append(InlineKeyboardButton(text=text, callback_data=f"theme_{theme}"))
        if len(row) == 2:
            buttons.append(row)
            row = []
    if row:
        buttons.append(row)

    buttons.append([InlineKeyboardButton(text="–î—Ä—É–≥–∞—è —Ç–µ–º–∞", callback_data="custom_theme")])
    buttons.append([InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data="done_themes")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_confirmation_keyboard(post_text, photo_url):
    # –ù–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥—É, –æ—Å—Ç–∞–≤–ª—è–µ–º
    buttons = [
        [InlineKeyboardButton(text="–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data="publish_post")],
        [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="cancel_post")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_source_actions_keyboard(source_id):
    # –ù–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥—É, –æ—Å—Ç–∞–≤–ª—è–µ–º
    buttons = [
        [InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫", callback_data=f"delete_source_{source_id}")],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º—ã", callback_data=f"edit_themes_{source_id}")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_publish_keyboard(post_id, group_link, has_media):
    buttons = [
        [InlineKeyboardButton(text="‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data=f"publish_post_{post_id}_{group_link}")],
        [InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_post_text_{post_id}_{group_link}")],
    ]
    if has_media:
        buttons.append([InlineKeyboardButton(text="üñºÔ∏è –ó–∞–º–µ–Ω–∏—Ç—å –º–µ–¥–∏–∞", callback_data=f"edit_post_media_{post_id}_{group_link}")])
    buttons.append([InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"cancel_post_{post_id}_{group_link}")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_admin_check_keyboard(post_link):
    # –ù–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥—É, –æ—Å—Ç–∞–≤–ª—è–µ–º
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å", url=post_link)]])

def get_post_edit_keyboard():
    # –ù–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥—É, –æ—Å—Ç–∞–≤–ª—è–µ–º
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û–¥–æ–±—Ä–∏—Ç—å", callback_data="approve_post")],
        [InlineKeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="edit_post")],
        [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_post_approval")]
    ])

def get_inline_main_keyboard():
    # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞, –æ—Å—Ç–∞–≤–ª—è–µ–º
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]])

def get_post_approval_keyboard(queue_id: int):
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve_post_{queue_id}"),
            InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"cancel_post_{queue_id}")
        ],
        [InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_queued_post_{queue_id}")]
    ])

def get_autopost_approval_keyboard(group_link: str):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–æ–º –≤ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–æ–º —Ä–µ–∂–∏–º–µ"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data=f"approve_autopost_{group_link}")],
        [InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç", callback_data=f"rewrite_autopost_{group_link}")],
        [InlineKeyboardButton(text="üîÑ –ó–∞–º–µ–Ω–∏—Ç—å –ø–æ—Å—Ç", callback_data=f"replace_autopost_{group_link}")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"cancel_autopost_{group_link}")]
    ])

def get_recheck_admin_keyboard(channel_link: str):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∞."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîÑ –ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞", callback_data=f"recheck_admin_{channel_link}")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_add_group")]
    ])