#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è blocked_topics –≤ —Ç–∞–±–ª–∏—Ü—É autopost_settings
"""

import psycopg2
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv(override=True)

def add_blocked_topics_column():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ blocked_topics –≤ —Ç–∞–±–ª–∏—Ü—É autopost_settings"""
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn_params = {
        "host": "80.74.24.141",
        "port": 5432,
        "database": "mydb",
        "user": os.getenv('USER_DB'),
        "password": os.getenv('USER_PWD')
    }
    
    schema = "ii_rewriter"
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        with psycopg2.connect(**conn_params) as conn:
            with conn.cursor() as cur:
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª–µ blocked_topics
                cur.execute(f"""
                    SELECT column_name 
                    FROM information_schema.columns 
                    WHERE table_schema = '{schema}' 
                    AND table_name = 'autopost_settings' 
                    AND column_name = 'blocked_topics'
                """)
                
                has_blocked_topics = cur.fetchone() is not None
                
                if not has_blocked_topics:
                    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ blocked_topics
                    cur.execute(f"""
                        ALTER TABLE {schema}.autopost_settings 
                        ADD COLUMN blocked_topics TEXT
                    """)
                    print("‚úÖ –ü–æ–ª–µ blocked_topics –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É autopost_settings")
                else:
                    print("‚ÑπÔ∏è –ü–æ–ª–µ blocked_topics —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ autopost_settings")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª–µ text –≤ —Ç–∞–±–ª–∏—Ü–µ published_posts
                cur.execute(f"""
                    SELECT column_name 
                    FROM information_schema.columns 
                    WHERE table_schema = '{schema}' 
                    AND table_name = 'published_posts' 
                    AND column_name = 'text'
                """)
                
                has_text_column = cur.fetchone() is not None
                
                if not has_text_column:
                    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ text
                    cur.execute(f"""
                        ALTER TABLE {schema}.published_posts 
                        ADD COLUMN text TEXT NOT NULL DEFAULT ''
                    """)
                    print("‚úÖ –ü–æ–ª–µ text –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É published_posts")
                else:
                    print("‚ÑπÔ∏è –ü–æ–ª–µ text —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ published_posts")
                
                conn.commit()
                print("‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª–µ–π: {e}")

if __name__ == "__main__":
    print("üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
    add_blocked_topics_column()
    print("‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω") 